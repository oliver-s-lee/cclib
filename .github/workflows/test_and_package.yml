---
# yamllint disable rule:line-length
name: run tests and create installable packages

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: test-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

# For now always take the "reduced" form of the version, even for those
# actions runs that do not push to a package index.
env:
  VERSIONINGIT_FOR_PACKAGE_INDEX: true

jobs:

  run-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        container:
          - 'shivupa/cclib-ci:py37-edge'
          - 'shivupa/cclib-ci:py38-edge'
          - 'shivupa/cclib-ci:py39-edge'
          - 'shivupa/cclib-ci:py310-edge'
          - 'shivupa/cclib-ci:py311-edge'
          - 'shivupa/cclib-ci:py312-edge'
    container:
      image: ${{ matrix.container }}
    defaults:
      run:
        shell: bash -eo pipefail -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # so versioningit can figure out the version
          fetch-depth: 0
          fetch-tags: true
      - name: Allow repo access (see https://github.com/actions/checkout/issues/760)
        run: |
          git config --global --add safe.directory /__w/cclib/cclib
      - name: Prepare conda environment
        run: |
          echo "/opt/conda/envs/cclib/bin" >> "${GITHUB_PATH}"
      - name: Install cclib
        run: |
          python -m pip install .
      - name: Filter code
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            methods:
              - 'cclib/method/**'
              - 'test/method/**'
      - name: Enable test coverage for Python < 3.12
        run: |
          echo "PYTEST_ENABLE_COVERAGE=true" >> "${GITHUB_ENV}"
        if: matrix.container != 'shivupa/cclib-ci:py312-edge'
      - name: Test core code with pytest
        run: |
          env | sort
          bash .github/scripts/run_pytest.bash "$(nproc)"
      - name: Test methods with pytest
        if: steps.filter.outputs.methods == 'true'
        run: |
          bash .github/scripts/run_pytest_methods.bash "$(nproc)"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          files: ./coverage-unit.xml,./coverage-regression.xml,./coverage-method.xml
          name: codecov-cclib
          fail_ci_if_error: false
          verbose: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: matrix.container == 'shivupa/cclib-ci:py311-edge'
      - name: Install pypa/build
        run: |
          python -m pip install build
      - name: Build distribution packages (binary wheel and source tarball)
        run: |
          python -m build
      - name: Check packages with twine
        run: |
          python -m pip install twine
          python -m twine check dist/*
      - name: Store the distribution packages
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: python-package-distributions
          path: dist/
        if: matrix.container == 'shivupa/cclib-ci:py312-edge'

  # We check the installation using all Python versions using the packages
  # created from a single version, since the packages are platform and version
  # independent.
  check-installation:
    needs:
      - run-tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        install-method: [wheel, source]
        python-version:
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
          - 3.12
    steps:
      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download the distribution packages
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Update environment
        run: |
          python -m pip install -U setuptools pip
      - name: Install from wheel
        run: |
          python -m pip install dist/*.whl
        if: matrix.install-method == 'wheel'
      - name: Install from source
        run: |
          python -m pip install dist/*.tar.gz
        if: matrix.install-method == 'source'
      - name: Check cclib install
        run: |
          cd ~
          python -c 'import cclib; print(cclib.__version__)'
          python -c 'from cclib.io import ccread; data = ccread("https://raw.githubusercontent.com/cclib/cclib-data/master/Gaussian/Gaussian16/water.log"); print(data.zpve)'
